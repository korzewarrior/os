/* Common window system styles */

/* Base window container */
.window-container {
  border-radius: 8px;
  box-shadow: var(--window-shadow);
  overflow: hidden;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
  min-width: 400px;
  min-height: 300px;
  display: flex;
  flex-direction: column;
  transition: width 0.2s, height 0.2s, transform 0.3s ease, box-shadow 0.2s ease;
  background-color: var(--window-bg);
}

/* Add a subtle highlight effect when window is active/focused */
.window-container:not(.minimized) {
  box-shadow: var(--window-shadow);
}

/* Focused window styling */
.window-container.window-focused {
  box-shadow: var(--window-shadow-focused);
  z-index: 500 !important; /* Ensure focused windows are above others */
}

/* Default focused window header styling is now removed to allow app-specific styling */
/* Window headers are light by default, terminal will override with its own dark style */

/* Common window header - standardized height */
.window-header {
  height: var(--header-height-tall);
  display: flex;
  align-items: center;
  padding: 0 10px;
  cursor: grab;
  user-select: none;
  -webkit-user-select: none;
  touch-action: none;
  transition: background-color 0.3s ease;
  background-color: var(--window-header-bg);
  border-bottom: 1px solid var(--window-header-border);
  pointer-events: auto !important; /* Ensure header always receives events */
}

/* Window controls - consistent positioning */
.window-controls {
  display: flex;
  gap: 8px;
  margin-right: 15px;
  flex-shrink: 0;
  padding: 6px 0;
}

.control {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.2s ease;
}

.control:hover {
  transform: scale(1.2);
}

.control:active {
  transform: scale(0.9);
}

.red { background-color: var(--control-red); }
.yellow { background-color: var(--control-yellow); }
.green { background-color: var(--control-green); }

/* 
 * Window title styling hierarchy:
 * 1. Default: All window titles are dark for light backgrounds
 * 2. Terminal: Terminal window overrides with light title color for its dark background
 */

/* Window title - standardized */
.window-title {
  flex-grow: 1;
  text-align: center;
  font-weight: bold;
  font-size: calc(var(--base-font-size) * 1.05);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: var(--text-primary);
  user-select: none;
}

/* Window states */
.minimized {
  display: none !important;
}

/* Fullscreen state */
.fullscreen {
  width: 100% !important;
  height: 100vh !important;
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  border-radius: 0 !important;
  z-index: 1100 !important; /* Always stay above other windows when fullscreen */
  transition: all 0.3s ease;
}

/* Dragging behavior - ENHANCED */
.window-container.dragged {
  transform: none !important;
  transition: none !important;
  z-index: 1200 !important; /* Ensure dragged window is on top */
  /* opacity: 0.9; /* Temporarily removed for testing */
  background-color: rgba(245, 245, 245, 0.5); /* Semi-transparent light background - try slightly more transparent */
  -webkit-backdrop-filter: blur(16px); /* Safari */
  backdrop-filter: blur(16px); 
}

/* Also make window content transparent when dragging */
.window-container.dragged .window-content {
  background-color: transparent !important; /* Added !important just in case */
}

/* Apply different transparent background for dark theme */
body.dark-theme .window-container.dragged {
  background-color: rgba(40, 40, 40, 0.5); /* Semi-transparent dark background - try slightly more transparent */
}

.window-header:active {
  cursor: grabbing !important;
  pointer-events: auto !important;
}

/* Ensure entire header is draggable */
.window-header * {
  pointer-events: auto;
}

/* Only exclude controls from dragging behavior */
.window-controls * {
  pointer-events: auto;
}

/* Resize handle - consistent styling */
.resize-handle {
  position: absolute;
  width: 15px; 
  height: 15px;
  /* background: rgba(0, 0, 0, 0.1); // Optional: for debugging */
  z-index: 10; /* Ensure handles are clickable */
}

/* --- NEW: Edge and Corner Resize Handles --- */
.resize-handle-edge,
.resize-handle-corner {
    position: absolute;
    /* Make them slightly larger for easier grabbing, but visually thin */
    /* Adjust padding as needed */
    padding: 2px; 
    z-index: 100;
    pointer-events: auto !important;
}

/* Position Edges */
.resize-handle-top {
    top: -2px; left: 4px; right: 4px; height: 4px; cursor: ns-resize;
}
.resize-handle-bottom {
    bottom: -2px; left: 4px; right: 4px; height: 4px; cursor: ns-resize;
}
.resize-handle-left {
    left: -2px; top: 4px; bottom: 4px; width: 4px; cursor: ew-resize;
}
.resize-handle-right {
    right: -2px; top: 4px; bottom: 4px; width: 4px; cursor: ew-resize;
}

/* Position Corners */
.resize-handle-top-left {
    top: -2px; left: -2px; width: 8px; height: 8px; cursor: nwse-resize;
}
.resize-handle-top-right {
    top: -2px; right: -2px; width: 8px; height: 8px; cursor: nesw-resize;
}
.resize-handle-bottom-left {
    bottom: -2px; left: -2px; width: 8px; height: 8px; cursor: nesw-resize;
}
/* Use existing .resize-handle for bottom-right, or rename/replace */
/* .resize-handle-bottom-right { ... } */

/* Optional: Add subtle visual indicator on hover for edge handles */
/* .resize-handle-edge:hover { background-color: rgba(0, 0, 0, 0.1); } */
/* --- End NEW Handles --- */

/* Resize triangle visualization */
.resize-triangle {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 0 12px 12px;
  border-color: transparent transparent var(--text-muted) transparent;
  opacity: 0.5;
  transition: opacity 0.2s;
  pointer-events: none; /* Let events pass through to the handle */
}

.resize-handle:after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 8px;
  height: 8px;
  border-right: 2px solid var(--text-muted);
  border-bottom: 2px solid var(--text-muted);
  opacity: 0.5;
  transition: opacity 0.2s, border-color 0.2s;
  pointer-events: none; /* Let events pass through to the handle */
}

.resize-handle:hover:after {
  opacity: 0.8;
}

/* Keep windows on top when active */
.window-container:not(.minimized):not(.fullscreen) {
  position: absolute !important;
}

/* Window content area */
.window-content {
  flex-grow: 1;
  overflow: auto;
  position: relative;
  background-color: var(--window-bg-alt);
}

/* Scrollbar styling */
.window-container *::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

.window-container *::-webkit-scrollbar-track {
  background: transparent;
}

.window-container *::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb);
  border-radius: 5px;
}

.window-container *::-webkit-scrollbar-thumb:hover {
  background-color: var(--scrollbar-thumb-hover);
}

/* Dock styles */
.dock-container {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
  padding-bottom: 10px;
  z-index: 1000;
}

.dock {
  background-color: var(--dock-bg);
  border-radius: 16px;
  padding: 5px;
  display: flex;
  backdrop-filter: var(--dock-backdrop);
  box-shadow: var(--dock-shadow);
}

.dock-item {
  width: 50px;
  height: 50px;
  margin: 0 5px;
  border-radius: 10px;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: transparent;
  position: relative;
}

.dock-item:hover {
  transform: scale(1.2);
}

/* Indicator dot for active applications */
.dock-item::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.8);
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* Show indicator dot when application is open */
.dock-item.active::after {
  opacity: 1;
}

.dock-item img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.3));
}

.dock-item.bounce {
  animation: bounce 0.5s ease infinite;
}

/* Animation for dock icon bounce */
@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.resize-handle-br {
    bottom: 0;
    right: 0;
    cursor: nwse-resize; /* Bottom-right resize cursor */
}

.resize-handle-bl {
    bottom: 0;
    left: 0;
    cursor: nesw-resize; /* Bottom-left resize cursor */
}

/* Optional: Visual indicator for handles */
.resize-handle::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
}

.resize-handle-br::after {
    bottom: 0;
    right: 0;
    border-width: 0 0 8px 8px;
    border-color: transparent transparent rgba(0,0,0,0.2) transparent;
}

.resize-handle-bl::after {
    bottom: 0;
    left: 0;
    border-width: 0 8px 8px 0;
    border-color: transparent rgba(0,0,0,0.2) transparent transparent;
}

/* Disable transitions during resize/drag for performance */
.window-container.resizing,
.window-container.dragged {
    transition: none !important; /* Override transitions */
} 